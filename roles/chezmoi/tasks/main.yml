# code: language=ansible
---
# http://chezmoi.io/
- name: Setup {{ app }}
  vars:
    app: "chezmoi"
    scripts:
      headers: "{{ chezmoi_block_header_result.stdout }}"
      bash:
        Ubuntu: |
          alias chezmoi='snap run chezmoi'
      zsh:
        Ubuntu: |
          alias chezmoi='snap run chezmoi'
  block:
    - name: Install {{ app }}
      ansible.builtin.include_tasks: "{{ item }}"
      with_first_found:
        - files:
            - "{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml"
            - "{{ ansible_distribution }}-{{ ansible_distribution_major_version | int }}.yml"
            - "{{ ansible_distribution }}.yml"
            - "{{ ansible_os_family }}.yml"
            - "default.yml"
          skip: true

    - name: Create file block header
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          figlet -f {{ figlet_font }} '{{ app[:14] }}' | boxes -d {{ boxes_design }}
        executable: /bin/bash
      register: chezmoi_block_header_result
      changed_when: chezmoi_block_header_result.rc != 0

    - name: Configure shell scripts
      when: scripts[file_item.shell][ansible_distribution] is defined
      ansible.builtin.blockinfile:
        state: "{{ file_item.state | default(omit) }}"
        marker: "# {mark} ANSIBLE MANAGED BLOCK - {{ app }}"
        dest: "{{ file_item.name }}"
        backup: true
        block: |
          {{ scripts.headers }}
          {{ scripts[file_item.shell][ansible_distribution] | default(script[file_item.shell]) }}
        prepend_newline: true
      loop:
        - { name: "{{ file_zshrc }}", shell: "zsh" }
        - { name: "{{ file_bashrc }}", shell: "bash" }
      loop_control:
        loop_var: file_item
